fragment minimalEntity on Entity {
  id
  type
  metadata(key: [title, type]) {
    key
    value
  }
}

fragment fullEntity on Entity {
  id
  type
  title: metadata(key: [title]) {
    key
    value
  }
  metadata(key: [description, material, type]) {
    key
    value
  }
  mediafiles {
    _id
    original_file_location
  }
  relations {
    key
    type
  }
}

query getEntities($limit: Int, $skip: Int, $searchQuery: String) {
  Entities(limit: $limit, skip: $skip, searchQuery: $searchQuery) {
    count
    limit
    results {
      ...minimalEntity
    }
  }
}

query getFullEntities($limit: Int, $skip: Int, $searchQuery: String, $fetchPolicy: String) {
  Entities(limit: $limit, skip: $skip, searchQuery: $searchQuery, fetchPolicy: $fetchPolicy) {
    count
    limit
    results {
      ...fullEntity
    }
  }
}

query getEntityById($id: String!) {
  Entity(id: $id) {
    ...fullEntity
  }
}

mutation editMetadata($id: String!, $metadata: [MetadataInput!]!) {
  replaceMetadata(id: $id, metadata: $metadata) {
    ...fullEntity
  }
}
