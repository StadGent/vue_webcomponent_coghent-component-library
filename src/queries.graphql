fragment minimalEntity on Entity {
  id
  type
  metadata(key: [title, type]) {
    key
    value
  }
}

fragment fullEntity on Entity {
  id
  type
  title: metadata(key: [title]) {
    key
    value
  }
  metadata(key: [description, material, type]) {
    key
    value
  }
  mediafiles {
    _id
    original_file_location
  }
  relations {
    key
    type
  }
}

fragment fullUser on User {
  id
  email
  family_name
  given_name
  name
  preferred_username
}

query getEntities($limit: Int, $skip: Int, $searchValue: SearchFilter!) {
	Entities(limit: $limit, skip: $skip, searchValue: $searchValue) {
		count
		limit
		results {
			...minimalEntity
		}
	}
}

query getFullEntities(
	$limit: Int
	$skip: Int
	$searchValue: SearchFilter!
	$fetchPolicy: String
) {
	Entities(
		limit: $limit
		skip: $skip
		searchValue: $searchValue
		fetchPolicy: $fetchPolicy
	) {
		count
		limit
		results {
			...fullEntity
		}
	}
}

query getEntityById($id: String!) {
  Entity(id: $id) {
    ...fullEntity
  }
}

query getMe {
  User {
    ...fullUser
  }
}

mutation editMetadata($id: String!, $metadata: [MetadataInput!]!) {
  replaceMetadata(id: $id, metadata: $metadata) {
    ...fullEntity
  }
}
