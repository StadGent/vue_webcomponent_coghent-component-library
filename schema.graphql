scalar Void

enum MetaKey {
  title
  type
  collection
  description
  material
}

enum RelationType {
  authoredBy
  isIn
}

type Metadata {
  key: MetaKey!
  value: String!
  lang: String
}

input MetadataInput {
  key: MetaKey!
  value: String!
  lang: String
}

type Entity {
  id: String!
  type: String!
  metadata(key: [MetaKey]): [Metadata]!
  mediafiles: [MediaFile],
  relations: [Relation]
}

type MediaFile {
  _id: String!
  original_file_location: String
  entities: [String]
}

type Relation {
  key: String!
  type: RelationType!
}

type EntitiesResults {
  results: [Entity]
  count: Int
  limit: Int
}

type Query {
  Entity(id: String!): Entity
  Entities(limit: Int, skip: Int, searchQuery: String, fetchPolicy: String): EntitiesResults
  SearchEntities(limit: Int, skip: Int): EntitiesResults
}

type Mutation {
  replaceMetadata(id: String!, metadata: [MetadataInput!]!): Entity
}
